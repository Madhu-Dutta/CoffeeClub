/*
Deployment script for coffeedb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar testVar "true"
:setvar DatabaseName "coffeedb"
:setvar DefaultFilePrefix "coffeedb"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
PRINT N'Rename refactoring operation with key f859af7c-7d1a-4c49-8826-a3364caaf967, f7ece869-0cf6-4435-bbb6-44cfb0c8e5a8 is skipped, element [dbo].[Records].[Id] (SqlSimpleColumn) will not be renamed to RecordID';


GO
PRINT N'Rename refactoring operation with key 2c14658a-0333-41e9-95fe-a1fa851b0539 is skipped, element [dbo].[Records].[time] (SqlSimpleColumn) will not be renamed to Time';


GO
PRINT N'The following operation was generated from a refactoring log file 6a084a1b-e942-4d0e-99bc-5a150742e3a8, 816d1717-5bc1-4da0-a320-7c74db7b457b';

PRINT N'Rename [dbo].[MemberLogin].[Id] to memberID';


GO
EXECUTE sp_rename @objname = N'[dbo].[MemberLogin].[Id]', @newname = N'memberID', @objtype = N'COLUMN';


GO
PRINT N'Rename refactoring operation with key 9d6404ac-68d3-4cbf-96a5-fbe5a17476d3 is skipped, element [dbo].[Records].[memberId] (SqlSimpleColumn) will not be renamed to memberID';


GO
PRINT N'Creating [dbo].[Records]...';


GO
CREATE TABLE [dbo].[Records] (
    [RecordID] INT            NOT NULL,
    [Time]     TIME (7)       NOT NULL,
    [Date]     DATE           NOT NULL,
    [Venue]    NVARCHAR (MAX) NOT NULL,
    [memberID] INT            NOT NULL,
    CONSTRAINT [PK_Records] PRIMARY KEY CLUSTERED ([RecordID] ASC)
);


GO
PRINT N'Creating [dbo].[PK_Records_Member]...';


GO
ALTER TABLE [dbo].[Records] WITH NOCHECK
    ADD CONSTRAINT [PK_Records_Member] FOREIGN KEY ([memberID]) REFERENCES [dbo].[MemberLogin] ([memberID]);


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f859af7c-7d1a-4c49-8826-a3364caaf967')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f859af7c-7d1a-4c49-8826-a3364caaf967')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f7ece869-0cf6-4435-bbb6-44cfb0c8e5a8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f7ece869-0cf6-4435-bbb6-44cfb0c8e5a8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2c14658a-0333-41e9-95fe-a1fa851b0539')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2c14658a-0333-41e9-95fe-a1fa851b0539')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6a084a1b-e942-4d0e-99bc-5a150742e3a8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6a084a1b-e942-4d0e-99bc-5a150742e3a8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '816d1717-5bc1-4da0-a320-7c74db7b457b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('816d1717-5bc1-4da0-a320-7c74db7b457b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9d6404ac-68d3-4cbf-96a5-fbe5a17476d3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9d6404ac-68d3-4cbf-96a5-fbe5a17476d3')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
IF '$(testVar)' = 'true'
BEGIN

--Delete from tables
DELETE FROM Records;
DELETE FROM MemberLogin;

--Insert Values
--INSERT INTO MemberLogin(Email, Password, Phone, FullName) VALUES 
--('example@test.com', '1234', '444-444-444', 'Test User'),
--('maddy@test.com', '1234', '555-555-555', 'Maddy Chan');

END;
GO

GO
